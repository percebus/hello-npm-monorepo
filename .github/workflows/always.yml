name: Verify
on:
  push:

env:
  NODE_VERSION: 22

  REPOSITORY_NAME: ${{ github.event.repository.name }}

  DOCKER_BUILDKIT: 1
  DOCKER_TAG_VERSION: latest

jobs:
  npm_test_projects:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 6
      matrix:
        project:
          - express-app
          - package-b

    env:
      WORKSPACE: ./node/${{ matrix.project }}
      NPM_CLI_OPTS: --prefix ./node/${{ matrix.project }}
    name: npm test ${{ matrix.project }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: ls
        run: ls -la ./node/${{ matrix.project }}

      - name: setup node @ ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: setup
        run: npm run setup:ci --if-present ${{ env.NPM_CLI_OPTS }}
      - name: npm install
        run: npm ci ${{ env.NPM_CLI_OPTS }}
      - name: ls node_modules
        run: ls -la ${{ env.WORKSPACE }}/node_modules

      - name: npm test
        run: npm test ${{ env.NPM_CLI_OPTS }}

  yarn_test_projects:
    runs-on: ubuntu-latest
    env:
      WORKSPACE: ./node/package-c
      YARN_CLI_OPTS: --cwd ./node/package-c
    strategy:
      max-parallel: 6
      matrix:
        project:
          - package-c

    name: yarn test ${{ matrix.project }}
    steps:
      - name: checkout ${{ matrix.project }}
        uses: actions/checkout@v3

      - name: setup node @ ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: setup
        run: yarn ${{ env.YARN_CLI_OPTS }} run setup:ci
      - name: yarn install
        run: yarn ${{ env.YARN_CLI_OPTS }} run yarn:ci
      - name: ls node_modules
        run: ls -la ./node_modules

      - name: yarn test
        run: yarn ${{ env.YARN_CLI_OPTS }} test

  npm_test:
    name: npm test
    runs-on: ubuntu-latest
    needs:
      - npm_test_projects
      - yarn_test_projects
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: ls
        run: ls -la

      - name: setup node @ ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: setup
        run: npm run setup:ci --if-present
      - name: npm install
        run: npm ci
      - name: ls node_modules
        run: ls -la ./node_modules

      - name: npm test
        run: npm test

  yarn_test:
    name: yarn test
    runs-on: ubuntu-latest
    needs:
      - npm_test_projects
      - yarn_test_projects
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: ls
        run: ls -la

      - name: setup node @ ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: setup
        run: yarn run setup:ci
      - name: yarn install
        run: yarn run yarn:ci
      - name: ls node_modules
        run: ls -la ./node_modules

      - name: yarn test
        run: yarn test

  docker_build_matrix:
    name: docker build --target
    needs: npm_test
    continue-on-error: true
    strategy:
      max-parallel: 10
      matrix:
        DOCKER_TARGET:
          - root
          - express-app
          - rest-app
          # TODO add each package

    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: "docker build: ${{ matrix.DOCKER_TARGET }}"
        run: |
          docker build . \
            --target ${{ matrix.DOCKER_TARGET }} \
            --tag ${{ env.REPOSITORY_NAME }}.${{ matrix.DOCKER_TARGET }}:${{ env.DOCKER_TAG_VERSION }}

  docker_compose:
    name: docker compose
    if: github.ref == 'refs/heads/main'
    needs: docker_build_matrix
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: docker compose build
        run: docker compose build
